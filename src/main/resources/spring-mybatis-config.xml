<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.2.xsd    
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop.xsd 
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">
   	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<!-- <property name="location" value="classpath:mysql.properties" /> -->
		<property name="locations">  
           <list> 
              <value>classpath:db.properties</value>
            </list>  
        </property>
	</bean>

	<!-- 配置连接数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.xa.DruidXADataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${userpass}" />
	</bean>
	
	<!-- 配置连接数据源2 -->
	<bean id="dataSource2" class="com.alibaba.druid.pool.xa.DruidXADataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver2}" />
		<property name="url" value="${url2}" />
		<property name="username" value="${username2}" />
		<property name="password" value="${userpass2}" />
	</bean>
	
	<bean id="multipleDataSource" class="demo.server.MultipleDataSource">
		<property name="defaultTargetDataSource" ref="dataSource" />
		<property name="targetDataSources">
			<map>
				<entry key="dataSource" value-ref="dataSource" />
				<entry key="dataSource2" value-ref="dataSource2" />
			</map>
		</property>
	</bean>
	
	
	<!-- spring和MyBatis整合，配置mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource" />
		<!-- 自动扫描mapping.xml文件 
		<property name="mapperLocations" value="classpath:sqlMap/*.xml"></property>
		<property name="typeAliasesPackage" value="demo.entity" />
		-->
	</bean>
	
	<bean id="spilderMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		  <property name="mapperInterface" value="demo.dao.SpliderMapper" />
	</bean>
	
	<bean id="zhihuMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="demo.dao.ZhihuMapper" />
	</bean>
	
	<bean id="loginMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="mapperInterface" value="demo.dao.LoginMapper" />
	</bean>
	
	<!-- mybatis映射文件所对应的Mapper，也就是dao 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cmcc.demo.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>     
	-->
                        
</beans>